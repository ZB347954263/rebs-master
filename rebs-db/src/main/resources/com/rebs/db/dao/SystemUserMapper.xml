<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rebs.db.dao.SystemUserMapper">
  <resultMap id="BaseResultMap" type="com.rebs.db.domain.SystemUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 28 17:40:33 CST 2018.
    -->
    <id column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="EMPLOYEE_ID" jdbcType="DECIMAL" property="employeeId" />
    <result column="ROLE_ID" jdbcType="DECIMAL" property="roleId" />
    <result column="MEMO" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 28 17:40:33 CST 2018.
    -->
    USER_ID, PASSWORD, EMPLOYEE_ID, ROLE_ID, MEMO
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 28 17:40:33 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from SYSTEM_USER
    where USER_ID = #{userId,jdbcType=OTHER}
  </select>
  
  <!-- 根据手机号查询用户信息-->
  <select id="selectByMobilePhone" parameterType="java.lang.String" resultType="com.rebs.db.domain.SystemUserView">
	    select  
	        t1.user_id as userId,
	        t1.employee_id as employeeId,
	        t1.role_id as roleId,
	        t1.memo as memo,
	        t1.password as password,
	        t2.ORG_ID AS orgId,
	        t2.POST_NO AS postNo,
            t2.EMPLOYEE_NAME AS employeeName,
            t2.POST_ID AS postId,
            t2.SEX AS sex,
            t2.BIRTHDAY AS birthday,
            t2.NATIVE_PLACE AS nativePlace,
            t2.FOLK AS folk,
            t2.WEDDING AS wedding,
            t2.BEGIN_DATE AS beginDate,
            t2.WORK_PHONE AS workPhone,
            t2.HOME_PHONE AS homePhone,
            t2.MOBILE_PHONE AS mobilePhone,
            t2.EMAIL AS email,
            t2.ADDRESS AS address,
            t2.POST_CODE AS postCode,
            t2.ISONPOST AS isonpost,
            t2.MEMO AS empmemo,
            t2.IS_GROUP_LEADER AS isGroupLeader,
            t2.TECHNICIAN_TYPE_ID AS technicianTypeId,
            t2.WORK_NO AS workNo,
            t2.PINYIN_CODE AS pinyinCode,
            t2.LOGIN_COUNT AS loginCount,
            t2.LOGIN_TIME AS loginTime,
            t2.IDENTITY_CARDNO AS identityCardno,
            t2.POLITICAL_STATUS_ID AS politicalStatusId,
            t2.JOIN_RAIL_DATE AS joinRailDate,
            t2.EDUCATION_LEVEL_ID AS educationLevelId,
            t2.EMPLOYEE_TYPE_ID AS employeeTypeId,
            t2.SECOND_POST_ID AS secondPostId,
            t2.THIRD_POST_ID AS thirdPostId,
            t2.TECHNICAL_TITLE_ID AS technicalTitleId,
            t2.WORKGROUPLEADER_TYPE_ID AS workgroupleaderTypeId,
            t2.WORKGROUPLEADER_ORDER_DATE AS workgroupleaderOrderDate,
            t2.EDUCATION_EMPLOYEE_TYPE_ID AS educationEmployeeTypeId,
            t2.COMMITTEE_HEAD_SHIP_ID AS committeeHeadShipId,
            t2.ISREGISTERED AS isregistered,
            t2.EMPLOYEE_TRANSPORT_TYPE_ID AS employeeTransportTypeId,
            t2.AWARD_DATE AS awardDate,
            t2.COULD_POST_ID AS couldPostId,
            t2.TECHNICAL_DATE AS technicalDate,
            t2.TECHNICAL_TITLE_DATE AS technicalTitleDate,
            t2.POST_DATE AS postDate,
            t2.GRADUATE_UNIVERSITY AS graduateUniversity,
            t2.GRADUATE_DATE AS graduateDate,
            t2.STUDY_MAJOR AS studyMajor,
            t2.UNIVERSITY_TYPE AS universityType,
            t2.TECHNICAL_CODE AS technicalCode,
            t2.SAFE_LEVEL_ID AS safeLevelId,
            t2.NOW_POST_ID AS nowPostId,
            t3.POST_NAME AS postName,
            t4.FULL_NAME as fullName,
            t4.SHORT_NAME as shortName,
            t4.ID_PATH as orgIdPath
    from SYSTEM_USER t1
    INNER JOIN EMPLOYEE t2 ON t1.employee_id = t2.employee_id
    LEFT  JOIN POST t3 ON t2.POST_ID = t3.POST_ID
    LEFT  JOIN ORG t4 ON t2.ORG_ID = t4.ORG_ID
    where t2.MOBILE_PHONE = #{mobilePhone}
  </select>
  
  
  <!-- 根据工号查询用户信息-->
  <select id="selectByWorkNo" parameterType="java.lang.String" resultType="com.rebs.db.domain.SystemUserView">
        select  
	        t1.user_id as userId,
	        t1.employee_id as employeeId,
	        t1.role_id as roleId,
	        t1.memo as memo,
	        t1.password as password,
	        t2.ORG_ID AS orgId,
	        t2.POST_NO AS postNo,
            t2.EMPLOYEE_NAME AS employeeName,
            t2.POST_ID AS postId,
            t2.SEX AS sex,
            t2.BIRTHDAY AS birthday,
            t2.NATIVE_PLACE AS nativePlace,
            t2.FOLK AS folk,
            t2.WEDDING AS wedding,
            t2.BEGIN_DATE AS beginDate,
            t2.WORK_PHONE AS workPhone,
            t2.HOME_PHONE AS homePhone,
            t2.MOBILE_PHONE AS mobilePhone,
            t2.EMAIL AS email,
            t2.ADDRESS AS address,
            t2.POST_CODE AS postCode,
            t2.ISONPOST AS isonpost,
            t2.MEMO AS empmemo,
            t2.IS_GROUP_LEADER AS isGroupLeader,
            t2.TECHNICIAN_TYPE_ID AS technicianTypeId,
            t2.WORK_NO AS workNo,
            t2.PINYIN_CODE AS pinyinCode,
            t2.LOGIN_COUNT AS loginCount,
            t2.LOGIN_TIME AS loginTime,
            t2.IDENTITY_CARDNO AS identityCardno,
            t2.POLITICAL_STATUS_ID AS politicalStatusId,
            t2.JOIN_RAIL_DATE AS joinRailDate,
            t2.EDUCATION_LEVEL_ID AS educationLevelId,
            t2.EMPLOYEE_TYPE_ID AS employeeTypeId,
            t2.SECOND_POST_ID AS secondPostId,
            t2.THIRD_POST_ID AS thirdPostId,
            t2.TECHNICAL_TITLE_ID AS technicalTitleId,
            t2.WORKGROUPLEADER_TYPE_ID AS workgroupleaderTypeId,
            t2.WORKGROUPLEADER_ORDER_DATE AS workgroupleaderOrderDate,
            t2.EDUCATION_EMPLOYEE_TYPE_ID AS educationEmployeeTypeId,
            t2.COMMITTEE_HEAD_SHIP_ID AS committeeHeadShipId,
            t2.ISREGISTERED AS isregistered,
            t2.EMPLOYEE_TRANSPORT_TYPE_ID AS employeeTransportTypeId,
            t2.AWARD_DATE AS awardDate,
            t2.COULD_POST_ID AS couldPostId,
            t2.TECHNICAL_DATE AS technicalDate,
            t2.TECHNICAL_TITLE_DATE AS technicalTitleDate,
            t2.POST_DATE AS postDate,
            t2.GRADUATE_UNIVERSITY AS graduateUniversity,
            t2.GRADUATE_DATE AS graduateDate,
            t2.STUDY_MAJOR AS studyMajor,
            t2.UNIVERSITY_TYPE AS universityType,
            t2.TECHNICAL_CODE AS technicalCode,
            t2.SAFE_LEVEL_ID AS safeLevelId,
            t2.NOW_POST_ID AS nowPostId,
            t3.POST_NAME AS postName,
            t4.FULL_NAME as fullName,
            t4.SHORT_NAME as shortName,
            t4.ID_PATH as orgIdPath
    from SYSTEM_USER t1
    INNER JOIN EMPLOYEE t2 ON t1.employee_id = t2.employee_id
    LEFT  JOIN POST t3 ON t2.POST_ID = t3.POST_ID
    LEFT  JOIN ORG t4 ON t2.ORG_ID = t4.ORG_ID
    where t2.WORK_NO = #{workNo} OR t2.IDENTITY_CARDNO = #{workNo}
  </select>
  
  
  <!-- 根据openID用户信息-->
  <select id="selectByOpenId" parameterType="java.lang.String" resultType="com.rebs.db.domain.SystemUserView">
	    select  
	        t1.user_id as userId,
	        t1.employee_id as employeeId,
	        t1.role_id as roleId,
	        t1.memo as memo,
	        t1.password as password,
	        t2.ORG_ID AS orgId,
	        t2.POST_NO AS postNo,
            t2.EMPLOYEE_NAME AS employeeName,
            t2.POST_ID AS postId,
            t2.SEX AS sex,
            t2.BIRTHDAY AS birthday,
            t2.NATIVE_PLACE AS nativePlace,
            t2.FOLK AS folk,
            t2.WEDDING AS wedding,
            t2.BEGIN_DATE AS beginDate,
            t2.WORK_PHONE AS workPhone,
            t2.HOME_PHONE AS homePhone,
            t2.MOBILE_PHONE AS mobilePhone,
            t2.EMAIL AS email,
            t2.ADDRESS AS address,
            t2.POST_CODE AS postCode,
            t2.ISONPOST AS isonpost,
            t2.MEMO AS empmemo,
            t2.IS_GROUP_LEADER AS isGroupLeader,
            t2.TECHNICIAN_TYPE_ID AS technicianTypeId,
            t2.WORK_NO AS workNo,
            t2.PINYIN_CODE AS pinyinCode,
            t2.LOGIN_COUNT AS loginCount,
            t2.LOGIN_TIME AS loginTime,
            t2.IDENTITY_CARDNO AS identityCardno,
            t2.POLITICAL_STATUS_ID AS politicalStatusId,
            t2.JOIN_RAIL_DATE AS joinRailDate,
            t2.EDUCATION_LEVEL_ID AS educationLevelId,
            t2.EMPLOYEE_TYPE_ID AS employeeTypeId,
            t2.SECOND_POST_ID AS secondPostId,
            t2.THIRD_POST_ID AS thirdPostId,
            t2.TECHNICAL_TITLE_ID AS technicalTitleId,
            t2.WORKGROUPLEADER_TYPE_ID AS workgroupleaderTypeId,
            t2.WORKGROUPLEADER_ORDER_DATE AS workgroupleaderOrderDate,
            t2.EDUCATION_EMPLOYEE_TYPE_ID AS educationEmployeeTypeId,
            t2.COMMITTEE_HEAD_SHIP_ID AS committeeHeadShipId,
            t2.ISREGISTERED AS isregistered,
            t2.EMPLOYEE_TRANSPORT_TYPE_ID AS employeeTransportTypeId,
            t2.AWARD_DATE AS awardDate,
            t2.COULD_POST_ID AS couldPostId,
            t2.TECHNICAL_DATE AS technicalDate,
            t2.TECHNICAL_TITLE_DATE AS technicalTitleDate,
            t2.POST_DATE AS postDate,
            t2.GRADUATE_UNIVERSITY AS graduateUniversity,
            t2.GRADUATE_DATE AS graduateDate,
            t2.STUDY_MAJOR AS studyMajor,
            t2.UNIVERSITY_TYPE AS universityType,
            t2.TECHNICAL_CODE AS technicalCode,
            t2.SAFE_LEVEL_ID AS safeLevelId,
            t2.NOW_POST_ID AS nowPostId,
            t3.POST_NAME AS postName,
            t4.FULL_NAME as fullName,
            t4.SHORT_NAME as shortName,
            t4.ID_PATH as orgIdPath
    FROM SYSTEM_USER t1
    INNER JOIN EMPLOYEE t2 ON t1.employee_id = t2.employee_id
    INNER JOIN WX_EMPLOYEE t5 ON t1.employee_id = t5.employee_id
    LEFT  JOIN POST t3 ON t2.POST_ID = t3.POST_ID
    LEFT  JOIN ORG t4 ON t2.ORG_ID = t4.ORG_ID
    where t5.OPEN_ID = #{openId}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 28 17:40:33 CST 2018.
    -->
    delete from SYSTEM_USER
    where USER_ID = #{userId,jdbcType=OTHER}
  </delete>
  <insert id="insert" parameterType="com.rebs.db.domain.SystemUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 28 17:40:33 CST 2018.
    -->
    insert into SYSTEM_USER (USER_ID, PASSWORD, EMPLOYEE_ID, 
      ROLE_ID, MEMO)
    values (#{userId,jdbcType=OTHER}, #{password,jdbcType=OTHER}, #{employeeId,jdbcType=DECIMAL}, 
      #{roleId,jdbcType=DECIMAL}, #{memo,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" parameterType="com.rebs.db.domain.SystemUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 28 17:40:33 CST 2018.
    -->
    insert into SYSTEM_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="employeeId != null">
        EMPLOYEE_ID,
      </if>
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="memo != null">
        MEMO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=OTHER},
      </if>
      <if test="password != null">
        #{password,jdbcType=OTHER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=DECIMAL},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=DECIMAL},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rebs.db.domain.SystemUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 28 17:40:33 CST 2018.
    -->
    update SYSTEM_USER
    <set>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=OTHER},
      </if>
      <if test="employeeId != null">
        EMPLOYEE_ID = #{employeeId,jdbcType=DECIMAL},
      </if>
      <if test="roleId != null">
        ROLE_ID = #{roleId,jdbcType=DECIMAL},
      </if>
      <if test="memo != null">
        MEMO = #{memo,jdbcType=OTHER},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rebs.db.domain.SystemUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Sep 28 17:40:33 CST 2018.
    -->
    update SYSTEM_USER
    set PASSWORD = #{password,jdbcType=OTHER},
      EMPLOYEE_ID = #{employeeId,jdbcType=DECIMAL},
      ROLE_ID = #{roleId,jdbcType=DECIMAL},
      MEMO = #{memo,jdbcType=OTHER}
    where USER_ID = #{userId,jdbcType=OTHER}
  </update>
</mapper>